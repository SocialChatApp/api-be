services:
  # postgres:
  #   container_name: postgres
  #   image: postgres:16.0-alpine
  #   ports:
  #     - ${DATABASE_PORT}:5432
  #   volumes:
  #     - postgres:/data/postgres
  #   environment:
  #     POSTGRES_USER: ${DATABASE_USERNAME}
  #     POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
  #     POSTGRES_DB: ${DATABASE_NAME}
  #   healthcheck:
  #     test: pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME} -h 127.0.0.1
  #     interval: 5s
  #   networks:
  #     - backend
  #   restart: unless-stopped

  # api:
  #   stdin_open: true
  #   tty: true
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - ${APP_PORT}:${APP_PORT}
  #   environment:
  #     - NODE_OPTIONS=--openssl-legacy-provider
  #   networks:
  #     - backend

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    ports:
      - '6380:6380'
    command: redis-server --save 20 1 --loglevel warning 
    volumes: 
      - redis:/data
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  # postgres:
  redis:
  rabbitmq_data:

networks:
  backend:
    name: backend
    driver: bridge
